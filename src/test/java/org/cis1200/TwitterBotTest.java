package org.cis1200;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

import java.time.Duration;

import java.io.BufferedReader;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/** Tests for TwitterBot class */
public class TwitterBotTest {

    private boolean isPunctuated(String tweet) {
        if (tweet == null || tweet.length() == 0) {
            return false;
        }

        char lastChar = tweet.charAt(tweet.length() - 1);
        return lastChar == '.' || lastChar == '!' || lastChar == '?';
    }

    /*
     * The below test cases test whether your TwitterBot class itself is written
     * correctly. To generate a tweet of specific content, make a desiredTweet list
     * containing the words you want to appear in the tweet. Then, call
     * fixDistribution on desiredTweet. This should make your twitter bot generate
     * the desired tweet as a string when you call generateTweet with the length of
     * your tweet content (not including punctuations).
     *
     * These tests operate very similarly to our MarkovChain tests in its use of
     * `fixDistribution`, so make sure you know how to test MarkovChain before
     * testing this!
     */
    @Test
    public void simpleTwitterBotShortTest() {
        List<String> desiredTweet = new ArrayList<>(
                Arrays.asList(
                        "hello", "cis1200", "world", "!"
                )
        );
        String words = "0, simple test.\n"
                + "1, hello cis1200 world!\n"
                + "2, this is amazing.";
        StringReader sr = new StringReader(words);
        BufferedReader br = new BufferedReader(sr);
        TwitterBot t = new TwitterBot(br, 1);
        t.fixDistribution(desiredTweet);

        String expected = "hello cis1200 world!";
        String actual = t.generateTweet(3);
        assertEquals(expected, actual);
    }

    @Test
    public void simpleTwitterBotLongTest() {
        List<String> desiredTweet = new ArrayList<>(
                Arrays.asList(
                        "this", "comes", "from", "data", "with", "no", "duplicate", "words", ".",
                        "the", "end", "should", "come", "."
                )
        );
        String words = "0, The end should come here.\n"
                + "1, This comes from data with no duplicate words!";
        StringReader sr = new StringReader(words);
        BufferedReader br = new BufferedReader(sr);
        TwitterBot t = new TwitterBot(br, 1);
        t.fixDistribution(desiredTweet);

        String expected = "this comes from data with no duplicate words. the end should come.";
        String actual = TweetParser.replacePunctuation(t.generateTweet(12));
        assertEquals(expected, actual);
    }

    /*
     * This is the empty file test case.
     *
     * When your CSV file is empty, your program should create an empty MarkovChain.
     * An empty tweet should be generated by your bot.
     * No exceptions should be thrown and your program should not go into an
     * infinite loop!
     */
    @Test
    public void emptyFileCreatesEmptyTweet() {
        // Checks that your program does not go into an infinite loop
        assertTimeoutPreemptively(
                Duration.ofSeconds(10), () -> {
                    // No exceptions are thrown if file is empty
                    TwitterBot tb = new TwitterBot(
                            FileLineIterator.fileToReader("./files/empty.csv"), 2
                    );
                    // Checks that the bot creates an empty tweet
                    assertEquals(0, tb.generateTweet(10).length());
                }
        );
    }

    /* **** ****** **** WRITE YOUR TESTS BELOW THIS LINE **** ****** **** */
    // Note: make sure to test for punctuations using `isPunctuated`.

    @Test
    public void generateTweetWithSpecificLength() {
        String words = "0, Hello world.\n"
                + "1, I love programming in Java.\n"
                + "2, This is a fun assignment.";
        StringReader sr = new StringReader(words);
        BufferedReader br = new BufferedReader(sr);
        TwitterBot t = new TwitterBot(br, 1);

        int expectedLength = 5;
        String generatedTweet = t.generateTweet(expectedLength);
        String[] wordsInGeneratedTweet = generatedTweet.split(" ");
        assertEquals(expectedLength, wordsInGeneratedTweet.length);
    }

    ///


    @Test
    public void punctuatedTweetTest() {
        String words = "0, Hello, world!\n"
                + "1, I love programming in Java.\n"
                + "2, This is a fun assignment.";
        StringReader sr = new StringReader(words);
        BufferedReader br = new BufferedReader(sr);
        TwitterBot t = new TwitterBot(br, 1);

        String generatedTweet = t.generateTweet(6);
        assertTrue(isPunctuated(generatedTweet));
    }




}
